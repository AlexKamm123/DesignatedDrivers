/*
 * Created by Osman Balci and Team 7 on 2023.4.26
 * Copyright Â© 2023 Osman Balci and Team 7. All rights reserved.
 */
package edu.vt.EntityBeans;

import javax.enterprise.inject.Default;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;

@Entity
@Table(name = "Ride")

@NamedQueries({
        @NamedQuery(name = "Ride.findAll", query = "SELECT r FROM Ride r"),
        @NamedQuery(name = "Ride.findByDriver", query = "SELECT r FROM Ride r WHERE r.carId.userId.id = :driver"),
        @NamedQuery(name = "Ride.findByUsername", query = "SELECT r FROM Ride r WHERE r.riders LIKE :passenger")
})

public class Ride implements Serializable {
    private static final long serialVersionUID = 1L;
    /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
    // id INT UNSIGNED NOT NULL AUTO_INCREMENT
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;

    // time DATE NOT NULL
    @Basic(optional = false)
    @NotNull
    @Column(name = "time")
    private Timestamp time;

//`riders` varchar(255) NOT NULL,
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 255)
    @Column(name = "riders")
    private String riders;
//	`destination_address` varchar(256) NOT NULL,
@Basic(optional = false)
@NotNull
@Size(min = 1, max = 256)
@Column(name = "destination_address")
private String destinationAddress;
//	`waypoints` varchar(2048) NOT NULL,
@Basic(optional = false)
@NotNull
@Size(min = 1, max = 2048)
@Column(name = "waypoints")
private String waypoints;
//	`address_ids` varchar(2048) NOT NULL,
@Basic(optional = false)
@NotNull
@Size(min = 1, max = 2048)
@Column(name = "address_ids")
private String addressIds;
//	`num_occupants` INT NOT NULL DEFAULT '0',
@Basic(optional = false)
@NotNull
@Column(name = "num_occupants")
private int numOccupants = 0;
//            `car_id` INT NOT NULL,
@JoinColumn(name = "car_id", referencedColumnName = "id")
@ManyToOne
private Car carId;
//            `event_id` INT NOT NULL,
@JoinColumn(name = "event_id", referencedColumnName = "id")
@ManyToOne
private Event eventId;
//    PRIMARY KEY (`id`

    /*
    ======================================================
    Getter and Setter methods for the attributes (columns)
    of the database table User
    ======================================================
     */

    public Ride(){

    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Timestamp getTime() {
        return time;
    }

    public void setTime(Timestamp time) {
        this.time = time;
    }

    public String getRiders() {
        return riders;
    }

    public void setRiders(String riders) {
        this.riders = riders;
    }

    public String getDestinationAddress() {
        return destinationAddress;
    }

    public void setDestinationAddress(String destinationAddress) {
        this.destinationAddress = destinationAddress;
    }

    public String getWaypoints() {
        return waypoints;
    }

    public void setWaypoints(String waypoints) {
        this.waypoints = waypoints;
    }

    public String getAddressIds() {
        return addressIds;
    }

    public void setAddressIds(String addressIds) {
        this.addressIds = addressIds;
    }

    public int getNumOccupants() {
        return numOccupants;
    }

    public void setNumOccupants(int numOccupants) {
        this.numOccupants = numOccupants;
    }

    public Car getCarId() {
        return carId;
    }

    public void setCarId(Car carId) {
        this.carId = carId;
    }

    public Event getEventId() {
        return eventId;
    }

    public void setEventId(Event eventId) {
        this.eventId = eventId;
    }


//    Instance Methods

    /*
    ================================
    Instance Methods Used Internally
    ================================
     */

    // Generate and return a hash code value for the object with database primary key id
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    /*
     Checks if the User object identified by 'object' is the same as the User object identified by 'id'
     Parameter object = User object identified by 'object'
     Returns True if the User 'object' and 'id' are the same; otherwise, return False
     */
    @Override
    public boolean equals(Object object) {
        if (!(object instanceof Ride)) {
            return false;
        }
        Ride other = (Ride) object;
        return (this.id != null || other.id == null) && (this.id == null || this.id.equals(other.id));
    }

    // Return String representation of database primary key id
    @Override
    public String toString() {
        return id.toString();
    }
}
