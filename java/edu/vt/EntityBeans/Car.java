/*
 * Created by Osman Balci and Team 7 on 2023.4.26
 * Copyright Â© 2023 Osman Balci and Team 7. All rights reserved.
 */

package edu.vt.EntityBeans;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;

@Entity
@Table(name = "Car")
@NamedQueries({
        @NamedQuery(name = "Car.findAll", query = "SELECT c FROM Car c")
        , @NamedQuery(name = "Car.findByUserId", query = "SELECT c FROM Car c WHERE c.userId.id = :userId")
})

public class Car implements Serializable {
    private static final long serialVersionUID = 1L;
    /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
    // id INT UNSIGNED NOT NULL AUTO_INCREMENT
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;


    //    `make` varchar(32) NOT NULL,
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 32)
    @Column(name = "make")
    private String make;

//	`model` varchar(32) NOT NULL,
@Basic(optional = false)
@NotNull
@Size(min = 1, max = 32)
@Column(name = "model")
private String model;
//	`license_plate` varchar(16) NOT NULL,
@Basic(optional = false)
@NotNull
@Size(min = 1, max = 16)
@Column(name = "license_plate")
private String licensePlate;
//	`max_occupants` INT NOT NULL,
@Basic(optional = false)
@NotNull
@Column(name = "max_occupants")
private int maxOccupants;
//            `user_id` INT NOT NULL,
@JoinColumn(name = "user_id", referencedColumnName = "id")
@ManyToOne
private User userId;


    /*
    ======================================================
    Getter and Setter methods for the attributes (columns)
    of the database table User
    ======================================================
     */

    public Car(){

    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getMake() {
        return make;
    }

    public void setMake(String make) {
        this.make = make;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public String getLicensePlate() {
        return licensePlate;
    }

    public void setLicensePlate(String licensePlate) {
        this.licensePlate = licensePlate;
    }

    public int getMaxOccupants() {
        return maxOccupants;
    }

    public void setMaxOccupants(int maxOccupants) {
        this.maxOccupants = maxOccupants;
    }

    public User getUserId() {
        return userId;
    }

    public void setUserId(User userId) {
        this.userId = userId;
    }

    //    Instance Methods

    /*
    ================================
    Instance Methods Used Internally
    ================================
     */

    // Generate and return a hash code value for the object with database primary key id
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    /*
     Checks if the User object identified by 'object' is the same as the User object identified by 'id'
     Parameter object = User object identified by 'object'
     Returns True if the User 'object' and 'id' are the same; otherwise, return False
     */
    @Override
    public boolean equals(Object object) {
        if (!(object instanceof Car)) {
            return false;
        }
        Car other = (Car) object;
        return (this.id != null || other.id == null) && (this.id == null || this.id.equals(other.id));
    }

    // Return String representation of database primary key id
    @Override
    public String toString() {
        return id.toString();
    }
}
