/*
 * Created by Osman Balci and Team 7 on 2023.4.26
 * Copyright Â© 2023 Osman Balci and Team 7. All rights reserved.
 */

package edu.vt.EntityBeans;

import javax.enterprise.inject.Default;
import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.sql.Timestamp;

@Entity
@Table(name = "Request")

@NamedQueries({
        @NamedQuery(name = "Request.findAll", query = "SELECT r FROM Request r")
        , @NamedQuery(name = "Request.findById", query = "SELECT r FROM Request r WHERE r.id = :id")
        , @NamedQuery(name = "Request.findByEvent", query = "SELECT r FROM Request r WHERE r.eventId.id = :eventId")
})

public class Request implements Serializable {
    private static final long serialVersionUID = 1L;
    /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
    // id INT UNSIGNED NOT NULL AUTO_INCREMENT
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Basic(optional = false)
    @Column(name = "id")
    private Integer id;


    //    `time` TIMESTAMP NOT NULL,
    @Basic(optional = false)
    @NotNull
    @Column(name = "time")
    private Timestamp time;
    //            `event_id` INT NOT NULL,
    @JoinColumn(name = "event_id", referencedColumnName = "id")
    @ManyToOne
    private Event eventId;
    //            `user_id` INT NOT NULL,
    @JoinColumn(name = "user_id", referencedColumnName = "id")
    @ManyToOne
    private User userId;
    //            `direction` varchar(16) NOT NULL,
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 16)
    @Column(name = "direction")
    private String direction;
    //	`address` varchar(256) NOT NULL,
    @Basic(optional = false)
    @NotNull
    @Size(min = 1, max = 256)
    @Column(name = "address")
    private String address;
    // `added` BOOLEAN NOT NULL
    @Basic(optional = false)
    @NotNull
    @Column(name = "num_passengers")
    private Integer numPassengers;

    /*
    ======================================================
    Getter and Setter methods for the attributes (columns)
    of the database table User
    ======================================================
     */

    public Request(){

    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Timestamp getTime() {
        return time;
    }

    public void setTime(Timestamp time) {
        this.time = time;
    }

    public Event getEventId() {
        return eventId;
    }

    public void setEventId(Event eventId) {
        this.eventId = eventId;
    }

    public User getUserId() {
        return userId;
    }

    public void setUserId(User userId) {
        this.userId = userId;
    }

    public String getDirection() {
        return direction;
    }

    public void setDirection(String direction) {
        this.direction = direction;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public Integer getNumPassengers() {
        return numPassengers;
    }

    public void setNumPassengers(Integer numPassengers) {
        this.numPassengers = numPassengers;
    }

    //    Instance Methods

    /*
    ================================
    Instance Methods Used Internally
    ================================
     */

    // Generate and return a hash code value for the object with database primary key id
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    /*
     Checks if the User object identified by 'object' is the same as the User object identified by 'id'
     Parameter object = User object identified by 'object'
     Returns True if the User 'object' and 'id' are the same; otherwise, return False
     */
    @Override
    public boolean equals(Object object) {
        if (!(object instanceof Request)) {
            return false;
        }
        Request other = (Request) object;
        return (this.id != null || other.id == null) && (this.id == null || this.id.equals(other.id));
    }

    // Return String representation of database primary key id
    @Override
    public String toString() {
        return id.toString();
    }
}
